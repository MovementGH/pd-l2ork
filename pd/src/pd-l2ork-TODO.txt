PD-L2ORK TODO:
*update the install README

*check if the defunct image object works.

*work on proper gop drawing (see the branch where the work was started)

*Deal with array manipulation and data structure drawing location issues

*Tooltips

*K12 menu/mode

*check for stray bug where bang and other objects stop working and bang objects gets stuck in on mode until the mouse is moved (nw.js bug?)

*check for stray bug where suddenly copy/paste stops working


 

PD-L2ORK DONE:
*gatom when edited from larger length to smaller, ends up having garbage (e.g. one that has 3 chars or numbers, activate it, and then start typing--after first char you end-up having garbage there) ONLY APPLIES TO THE 0 width gatoms (both text and number ones)
*"sorry, I could not find the source of that error" should be message if it is a message and not an error
*clicking on find box and then onto the canvas makes canvs interpret it as a selection box
*pressing return with the find bar open after you've already found an item and with the item deselected, does not reinitiate search
*search unable to find a phrase embedded inside another word (e.g. $1-local-$5-blah will not be found when searching for $5)
*Fixed netserver's extraneous benign errors: netserver: Resource temporarily unavailable (11) and netserver: could not send data to the client (including a typo)
*object width that is wider than text width due to the number of nlets when being edited does not size itself properly
*add copy option to gatoms (add the gatom value to the clipboard)
*Revamped the search box fixing bugs, regressions, and adding missing features.
  *Fixed HTML bug in pd_canvas.html
  *Added ability to properly detect wholeword vs partial word search
  *Ensured that when clicking on the find bar the click does not propagate onto the canvas, which could cause erroneous selection boxes and other issues.
  *Made sure that the existing selection box upon invoking the find bar is properly handled with a fake mouseup event.
  *Ensured that when one changes whole word option or deselects last found object, the search process restarts from the beginning.
  *Made it possible to search for A_DOLLAR inside an A_DOLLSYM (e.g. searching for $3 inside blah-$3-something would erroneously yield no results).
*More stability improvements to the maxlib/netserver.
  *Fixed extraneous benign errors due to the use of the new non-blocking mode. Made default debug output more conservative.
*fixed activated text box size and side-stepped the cord update issue, updated close dialog animation.
  *When text box is activated and the number of inlets or outlets requires that the object be wider than its text or specified width, the object now specifies appropriate width.
  *During editing because updating cords is not currently easy to do given that this logic is now spread across both nw.js and C, the edited object now has an aura (achieved through CSS) that ensures that the cords at least appear to fade out into nothing during the editing process, until the object is deactivated, at which point the C code will update cord locations.
  *Closing dialog is now animated and makes the visual experience a bit "smoother".
*add click mode 3 for the ggee/image that allows for tracking the cursor whithout preventing the passing of the click to objects below.
  *Updated core pd-l2ork engine behavior to allow for passing of pointer behavior to passthrough objects even if
   an object is grabbed.
  *Ensured proper stacking order (top to bottom).
  *Updated dialog and help files.
*Fixed a bug where opening recent image-help.pd file inside an instance of pd-l2ork spawned f
rom a command line, causes error when trying to open the image file associated with the image obje
ct because of nw.js' inability to handle relative paths provided by the pd-l2ork engine.
*Cosmetic fixes to help files
*Fixed bug where select all inside the dialogs (when selecting a text or numbers) on OSX selects canvas objects instead. Added ctrl/cmd+w for closing all dialogs that bind to the pdgui.dialog_bindings(windowname). Added ctrl/cmd+a for selecting text and numbers only on all dialogs that bind to the same call.
*Major regression: passthrough is not mapping properly inside GOP.
  * Required changes to the ggee/image and the core behavior inside g_editor.c and g_graph.c
  * Passthrough mode did not work after an object inside GOP has been grabbed.
  * x were y are off inside GOP.
  * Checked the mouseup event.
*Fixed regression on how the activated objects behave on the right edge and other object resizing logic.  
  * Added logic for providing nw.js with the activated object's number of nlets, which will help determine whether the object should automatically resize its width based on the text width (objects with more than 2 inlets or outlets will need to remain the same size, so as not to introduce dangling patchcords, since we have no way to update patchcord position until the object has been deactivated).
  * Fixed regression how the objects did not resize properly due to addition of the pixel-based width for an object to ensure the object with more than 1 in/outlet keeps its width.
  * Ensured that objects on the right edge do not get activated with more lines than they have deactivated (linked to problems above).
*Vastly improved performance using the new passthrough mode. Changed how the passthrough mode 3 communicates mouse events.
*Updated image help file and its dialog to reflect changes in image behavior.



TWEETER TODO:
*Make reliable sync when doing copying of loops and patterns (maybe send the sync data back to server?)

*Add ability for the instructor to alter others' settings?

*In offline mode, enable keyboards and other input for multiple tracks



TWEETER DONE:
*0.50 requires latest Pd-L2Ork 20211012 or newer due to new features added to the core pd-l2ork
*Fixed bug where shift+delete deleted twice
*Added hover mode ability to add notes based on the mouse (as opposed to the time bar) position. 00Made erasing using delete and shift+delete to support the hover mode. Also made insert (shift+` or ~) to support the hover mode.
*Updated and optimized the left panel to make room for the hover mode option.
*Updated server to also support the hover mode.
*Swapped tab and alt key functions to make play button easier to access.




OLD (NEED TO MERGE WITH ABOVE):
*Check if the defunct image object works.

*Finish gop drawing order work (see if there is something in the branch log to pull as to the status of the work)
	Redrawing entire canvas after tidy will not be necessary anymore

*Deal with array manipulation and data structure drawing location issues

*Tooltips

*K12 menu/mode

L2Ork Tweeter:


DONE:
*Add focus/commit to numbox2
*Add output option whenever an arrow up/down is pressed on the numbox2 while it is activated (with or without shift)
*Add interactive flag to gatoms and all iemguis that can be interacted with (gatom, tgl, bng, number2, vslider, hslider, vradio, hradio, knob, mknob)
	Gatoms need to be interactive by default
	Fix weird coloring of the mknob
	Finish help files
*L2Ork Tweeter: Enabled smooth pitch changing (detuning directly to signal generators without triggering the envelope)

C:
*add toggle mode to image (using grab/motion, like gatom)
*array in s-env draws on top of cnv, which it shouldn't (requires redrawing of the entire GOP, do we really want to do this?--this should solve itself once we decide to update rather than redraw messages)
*messages should be aware of $0?
*verbosity level for the console
*Draw SECONDARY redrect on gop scalar patchers to reflect the viewport?

*object synonyms do not instantiate until the main object has been instantiated (no solution--advise getting rid of aliases or making one monster startup setup routine)
*number2 should maintain focus after return to allow for entering next value (like regular number)
	*number and number2 arrow down/up should inc/dec value
*Add  netsend/receive~ for RPi objects to the RPi build IN PROGRESS
*Redesign main window interface
*add ability to custom name each instance of pd-l2ork (pd~?)
*shared sends and receives among multiple instances?
*scalar in a subpatch is visible even if it spills outside GOP (for legacy purposes we will keep this, and will hopefully fix this soon with the implementation of a window on a canvas)

K12:

Help:
