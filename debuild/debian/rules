#!/usr/bin/make -f
# -*- makefile -*-

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

nwjsver = 0.28.1
nwjspkg = nwjs-sdk-v$(nwjsver)-linux

ifeq ("$(shell dpkg-architecture -qDEB_HOST_ARCH)","armhf")
arch = arm
nwjsver = 0.27.6
else ifeq ("$(shell dpkg-architecture -qDEB_HOST_ARCH)","arm64")
arch = arm
nwjsver = 0.27.6
else ifeq ("$(shell dpkg-architecture -qDEB_HOST_ARCH)","amd64")
arch = x64
else
arch = ia32
endif

# Installation prefix. This must be something other than /usr if you want to
# install it alongside another Pd-L2Ork install. Note that some items, such as
# desktop files and icons will still be installed under /usr so that the system
# finds them, but they will be renamed to prevent name clashes with files from
# the existing install of pd-l2ork.
prefix = /opt/pd-l2ork

%:
	dh $@

override_dh_auto_configure:

override_dh_auto_clean:

# This runs too late, 'make check' then fails, probably due to our meddling
# with the directory layout, executable names, etc., during 'make install'.
# Instead we invoke 'make check' right after the build, see below.
override_dh_auto_test:

override_dh_auto_build:
# Copy the nw.js sources to where pd-l2ork wants them.
	@echo "DEB_HOST_ARCH = $(shell dpkg-architecture -qDEB_HOST_ARCH)"
	tar -xf debian/nwjs/$(nwjspkg)-$(arch).tar.gz && rm -rf pd/nw/nw && mv $(nwjspkg)-$(arch) pd/nw/nw
	cd l2ork_addons && (export V=0 inst_dir=$(prefix); ./tar_em_up.sh -Bn)
	make check prefix=$(prefix)

override_dh_auto_install:
	mkdir -p debian/pd-l2ork && mv packages/linux_make/build/* debian/pd-l2ork
# Create a link to the executable.
	mkdir -p debian/pd-l2ork/usr/bin && ln -sf $(prefix)/bin/pd-l2ork debian/pd-l2ork/usr/bin/pd-l2ork
# Create links to the include and lib directories.
	mkdir -p debian/pd-l2ork/usr/include && ln -sf $(prefix)/include/pd-l2ork debian/pd-l2ork/usr/include/pd-l2ork
	mkdir -p debian/pd-l2ork/usr/lib && ln -sf $(prefix)/lib/pd-l2ork debian/pd-l2ork/usr/lib/pd-l2ork
# Remove some unneeded files.
	cd debian/pd-l2ork/ && rm -rf Makefile README.txt etc usr/share/emacs
	cd debian/pd-l2ork$(prefix)/lib/pd-l2ork/extra && rm -rf */*.pd_linux_o */*.la
ifeq ($(arch),ia32)
# This causes trouble in 32 bit builds (64 bit executable in the 32 bit nw.js distribution?), remove it.
	cd debian/pd-l2ork$(prefix)/lib/pd-l2ork && rm -rf bin/nw/minidump_stackwalk
endif
# Add the bash completion file again, and edit it accordingly.
	mkdir -p debian/pd-l2ork/etc/bash_completion.d
	sed -e 's/pd-l2ork/pd-l2ork/g' < scripts/bash_completion/pd-l2ork > debian/pd-l2ork/etc/bash_completion.d/pd-l2ork
# Edit the library paths in the default user.settings file.
	cd debian/pd-l2ork$(prefix)/lib/pd-l2ork && sed -e "s!/usr/lib/pd-l2ork!$(prefix)/lib/pd-l2ork!g" -i default.settings
# Replace the pd-l2ork desktop/mime files and icons with pd-l2ork ones.
	cd debian/pd-l2ork/usr/share/applications && (sed -e 's/pd-l2ork/pd-l2ork/g' -e 's/Pd-L2Ork/Pd-L2Ork/g' < pd-l2ork.desktop > pd-l2ork.desktop) && (sed -e 's/pd-l2ork/pd-l2ork/g' -e 's/Pd-L2Ork/Pd-L2Ork/g' < pd-l2ork-debug.desktop > pd-l2ork-debug.desktop)
	cd debian/pd-l2ork/usr/share/mime/packages && (sed -e 's/pd-l2ork/pd-l2ork/g' < pd-l2ork.xml > pd-l2ork.xml)
	cd debian/pd-l2ork/usr/share/icons/hicolor/128x128/apps/ && rm -f pd-l2ork-k12*.png && mv pd-l2ork.png pd-l2ork.png && mv pd-l2ork-red.png pd-l2ork-red.png
	cd debian/pd-l2ork/usr/share/icons/hicolor/128x128/mimetypes/ && mv text-x-pd-l2ork.png text-x-pd-l2ork.png
# Sanitize permissions.
	cd debian/pd-l2ork && chmod -R go-w * && chmod -R a+r * && chmod a-x .$(prefix)/lib/pd-l2ork/default.settings
	find debian/pd-l2ork$(prefix)/lib/pd-l2ork/bin/nw -executable -not -type d | xargs chmod a+x
	find debian/pd-l2ork -executable -name '*.pd_linux' | xargs chmod a-x
	find debian/pd-l2ork -executable -name '*.pd' | xargs chmod a-x
	find debian/pd-l2ork -executable -name '*.txt' | xargs chmod a-x
	find debian/pd-l2ork -executable -name '*.aif*' | xargs chmod a-x
	find debian/pd-l2ork -type d | xargs chmod a+x

# NOTE: Older systems use dh_pysupport instead of dh_python2. See
# http://deb.li/dhs2p.
override_dh_python2:
	dh_python2 -n -Xxmlrpc-test.py

override_dh_compress:
	dh_compress -X.pd -X.wav -X.aiff -X.txt -X.md

override_dh_strip:
	dh_strip -Xbin/nw

# Supply some options to get rid of a gazillion of warnings about shared
# library files which are really externals.
override_dh_shlibdeps:
	dh_shlibdeps --dpkg-shlibdeps-params="--ignore-missing-info --warnings=0"
