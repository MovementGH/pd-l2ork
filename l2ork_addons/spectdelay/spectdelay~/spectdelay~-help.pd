#N canvas 80 42 899 466 10;
#X obj 713 119 cnv 15 126 48 empty empty empty 20 12 0 14 #fcfcc4 #404040
0;
#X obj -40 173 cnv 15 321 102 empty empty empty 20 12 0 14 #c4fcc4
#404040 0;
#X obj -40 315 cnv 15 321 102 empty empty empty 20 12 0 14 #c4c4fc
#404040 0;
#X obj -40 30 cnv 15 321 102 empty empty empty 20 12 0 14 #fce0c4 #404040
0;
#X obj 474 230 dac~;
#X obj 474 208 *~ 0.1;
#X obj 500 93 prepend fb;
#X obj 348 134 *~;
#X obj 347 29 phasor~ 440;
#X obj 310 29 pink~;
#N canvas 434 246 450 300 (subpatch) 0;
#X array delay 32 float 3 black black;
#A 0 0.0107938 0.0107938 0.140793 0.310793 0.440792 0.510792 0.370792
0.250793 0.240793 0.350792 0.440792 0.570791 0.660791 0.580791 0.450792
0.420792 0.480792 0.570791 0.650791 0.640791 0.520791 0.440792 0.510791
0.610791 0.429416 0.279415 0.569416 0.389415 0.319415 0.230792 0.120792
0;
#X coords 0 1 32 0 320 100 1;
#X restore -39 31 graph;
#X obj -40 419 hsl 316 15 0 1 0 0 \$0-fb empty empty -2 -8 0 10 #c4c4fc
#000000 #000000 0 1 0;
#X obj 363 114 vline~;
#X obj 363 72 metro 1000;
#X obj 630 92 prepend dt;
#X obj 630 29 array2list delay;
#X obj 500 30 array2list feedback;
#X obj 507 51 r \$0-fb;
#X obj -40 134 hsl 316 15 0 1 0 0 \$0-dt empty empty -2 -8 0 10 #fce0c4
#000000 #000000 0 1 0;
#X obj 511 72 arrayreset feedback;
#X obj 637 50 r \$0-dt;
#X obj 642 71 arrayreset delay;
#X obj 363 54 tgl 15 0 empty empty empty 17 7 0 10 #fcfcc4 #000000
#000000 1 1;
#X obj -40 277 hsl 316 15 -48 24 0 1 \$0-eq empty | 206 7 0 10 #c4fcc4
#000000 #fc0400 20550 1 0;
#N canvas 121 264 450 300 (subpatch) 0;
#X array feedback 32 float 3 black black;
#A 0 0 0.109999 0.209999 0.419997 0.569996 0.619996 0.599996 0.509997
0.607198 0.587198 0.527199 0.447199 0.3372 0.257201 0.207202 0.207202
0.207202 0.4072 0.3672 0.287201 0.277201 0.237201 0.197202 0.157202
0.147202 0.127202 0.117203 0.127202 0.00999997 0.0199999 0.00999997
0;
#X coords 0 1 32 0 320 100 1;
#X restore -39 316 graph;
#N canvas 121 264 450 300 (subpatch) 0;
#X array eq 64 float 3 black black;
#A 0 -1.02857 -1.02857 -1.02857 -1.02857 -1.02857 -1.02857 -1.02857
-1.02857 -1.02857 -1.02857 -1.02857 -1.02857 -1.02857 -1.02857 -1.02857
-1.02857 -1.02857 -1.02857 -1.02857 -1.02857 -1.02857 -1.02857 -1.02857
-1.02857 -1.02857 -1.02857 -1.02857 -1.02857 -1.02857 -1.02857 -1.02857
-1.02857 -1.02857 -1.02857 -1.02857 -1.02857 -1.02857 -1.02857 -1.02857
-1.02857 -1.02857 -1.02857 -1.02857 -1.02857 -1.02857 -1.02857 -1.02857
-1.02857 -1.02857 -1.02857 -1.02857 -1.02857 -1.02857 -1.02857 -1.02857
-1.02857 -1.02857 -1.02857 -1.02857 -1.02857 -1.02857 -1.02857 -1.02857
-1.02857;
#X coords 0 24 64 -48 320 100 1;
#X restore -39 174 graph;
#X obj 500 165 spectdelay~ 1024 2048 4 6;
#X obj 743 92 prepend eq;
#X obj 755 71 arrayreset eq;
#X obj 743 29 array2list eq;
#X obj 750 50 r \$0-eq;
#X text 314 296 spectdelay~ breaks down sound into frequency bins using
FFT analysis and then allows user to specify eq (in db from -48 to
+ 24) \, delay amount (float value 0-1) \, and feedback (float value
0-1). Values can be provided per-bin (we use here arrays as multisliders
for this purpose) or as a constant value for all bins (using horizontal
sliders).;
#N canvas 614 159 285 344 other_options 0;
#X obj 24 313 outlet;
#X msg 24 28 posteq \$1;
#X obj 24 9 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000
0 1;
#N canvas 209 237 402 195 binmap 0;
#X obj -18 -37 cnv 15 18 193 empty empty binmap 20 12 0 14 #c4fcc4
#404040 0;
#X text 13 -12 The word binmap \, followed by a list of ints \, which
gives the number of adjacent FFT bins to affect for each of the elements
of the EQ table. The binmap table and the EQ table must be the same
size. Giving the word binmap alone cancels the use of a binmap table.
For example \, the message "binmap 1 2 10 20 50" assumes a previous
eq message of five floats and treats the first of those floats as the
gain of the lowest FFT bin \, the second as the gain of the next two
FFT bins \, the third as the gain of the next ten FFT bins \, the fourth
as the gain of the next 20 FFT bins \, and the fifth as the gain of
the next 50 FFT bins (and any leftover bins above these).;
#X obj 234 150 cnv 6 149 6 empty empty empty 20 12 0 14 #dcdcdc #404040
0;
#X restore 35 56 pd binmap;
#N canvas 204 287 401 195 clear 0;
#X obj 0 0 cnv 15 18 193 empty empty clear 20 12 0 14 #c4fcc4 #404040
0;
#X obj 251 186 cnv 6 149 6 empty empty empty 20 12 0 14 #dcdcdc #404040
0;
#X text 31 25 The word clear. This fills all the spectral delay lines
with zero \, resulting in silence.;
#X restore 35 77 pd clear;
#N canvas 212 312 401 196 dbinmap 0;
#X obj 0 0 cnv 15 18 193 empty empty dbinmap 20 12 0 14 #c4fcc4 #404040
0;
#X obj 251 186 cnv 6 149 6 empty empty empty 20 12 0 14 #dcdcdc #404040
0;
#X text 31 25 The word dbinmap \, followed by a list of ints \, which
gives the number of adjacent FFT bins to affect for each of the elements
of the delay time and feedback tables. The delay binmap table and these
tables must be the same size. Giving the word dbinmap alone cancels
the use of a delay binmap table. The mapping scheme functions in the
way described for the binmap message.;
#X restore 35 98 pd dbinmap;
#N canvas 219 268 401 195 drange 0;
#X obj 0 0 cnv 15 18 193 empty empty drange 20 12 0 14 #c4fcc4 #404040
0;
#X obj 251 186 cnv 6 149 6 empty empty empty 20 12 0 14 #dcdcdc #404040
0;
#X text 31 25 The word drange \, followed by two floats (min and max)
\, which define the frequency range within which the delay time (del)
and feedback (feed) tables function. Giving 0 for max sets the maximum
frequency to Nyquist. By default \, the range is 0 Hz to Nyquist. Note
that this range is ignored when using the dbinmap table.;
#X restore 35 119 pd drange;
#N canvas 207 348 401 195 dx 0;
#X obj 0 0 cnv 15 18 193 empty empty dx 20 12 0 14 #c4fcc4 #404040
0;
#X obj 251 186 cnv 6 149 6 empty empty empty 20 12 0 14 #dcdcdc #404040
0;
#X text 31 25 The word dx \, followed by an index (int) and delay time
(float) to replace the value at that index in the currently defined
delay time table. The table must already have at least index + 1 values.
;
#X restore 35 140 pd dx;
#N canvas 233 285 401 195 ex 0;
#X obj 0 0 cnv 15 18 193 empty empty ex 20 12 0 14 #c4fcc4 #404040
0;
#X obj 251 186 cnv 6 149 6 empty empty empty 20 12 0 14 #dcdcdc #404040
0;
#X text 31 25 The word ex \, followed by an index (int) and EQ amplitude
in dB (float) to replace the value at that index in the currently defined
EQ table. The table must already have at least index + 1 values.;
#X restore 35 161 pd ex;
#N canvas 215 294 401 195 fb 0;
#X obj 0 0 cnv 15 18 193 empty empty fx 20 12 0 14 #c4fcc4 #404040
0;
#X obj 251 186 cnv 6 149 6 empty empty empty 20 12 0 14 #dcdcdc #404040
0;
#X text 31 25 The word fx \, followed by an index (int) and delay feedback
(float) to replace the value at that index in the currently defined
delay feedback table. The table must already have at least index +
1 values.;
#X restore 35 182 pd fb;
#N canvas 217 299 401 195 fft 0;
#X obj 0 0 cnv 15 18 193 empty empty fft 20 12 0 14 #c4fcc4 #404040
0;
#X obj 251 186 cnv 6 149 6 empty empty empty 20 12 0 14 #dcdcdc #404040
0;
#X text 31 25 The word fft \, followed by three ints \, gives the FFT
length \, window length \, and overlap (respectively). (See explanation
above in Arguments secion.) Note: sending this message will halt processing
while object reconfigures itself and will cause an audio glitch.;
#X restore 35 203 pd fft;
#N canvas 230 230 401 195 hold 0;
#X obj 0 0 cnv 15 18 193 empty empty hold 20 12 0 14 #c4fcc4 #404040
0;
#X obj 251 186 cnv 6 149 6 empty empty empty 20 12 0 14 #dcdcdc #404040
0;
#X text 31 25 The word hold \, followed by a 0 or a 1 If 0 \, play
normally. If 1 \, stop accepting input and allow the sound already
in delay lines to recirculate. (If instead you let the input decay
to zeros \, without holding \, you may hear the delay lines resonate
pitches corresponding to the fundamental frequency of analysis and
its harmonic partials.);
#X restore 35 224 pd hold;
#N canvas 223 254 401 195 maxdel 0;
#X obj 0 0 cnv 15 18 193 empty empty maxdel 20 12 0 14 #c4fcc4 #404040
0;
#X obj 251 186 cnv 6 149 6 empty empty empty 20 12 0 14 #dcdcdc #404040
0;
#X text 31 25 The word maxdel \, followed by a float giving the maximum
number of seconds for the delay lines.;
#X restore 35 245 pd maxdel;
#N canvas 228 256 401 195 posteq 0;
#X obj 0 0 cnv 15 18 193 empty empty posteq 20 12 0 14 #c4fcc4 #404040
0;
#X obj 251 186 cnv 6 149 6 empty empty empty 20 12 0 14 #dcdcdc #404040
0;
#X text 31 25 The word posteq \, followed by a 0 or a 1 If 0 \, EQ
is applied before delay. If 1 \, EQ is applied after delay \, which
means it affects sound that's feeding back through the delay lines.
;
#X restore 35 266 pd posteq;
#N canvas 224 278 401 195 range 0;
#X obj 0 0 cnv 15 18 193 empty empty range 20 12 0 14 #c4fcc4 #404040
0;
#X obj 251 186 cnv 6 149 6 empty empty empty 20 12 0 14 #dcdcdc #404040
0;
#X text 31 25 The word range \, followed by two floats (min and max)
\, which define the frequency range within which the EQ table functions.
Giving 0 for max sets the maximum frequency to Nyquist. By default
\, the range is 0 Hz to Nyquist. Note that this range is ignored when
using the binmap table.;
#X restore 35 287 pd range;
#X text 41 7 example: eq can be pre or post delay;
#X connect 1 0 0 0;
#X connect 2 0 1 0;
#X restore 726 140 pd other_options;
#X text 718 121 additional options:;
#X obj 283 172 bng 15 250 50 0 eq_changed empty empty 17 7 0 10 #c4fcc4
#000000 #000000;
#X obj 283 172 bng 15 250 50 0 eq_changed empty empty 17 7 0 10 #c4fcc4
#000000 #000000;
#X obj 283 314 bng 15 250 50 0 feedback_changed empty empty 17 7 0
10 #c4c4fc #000000 #000000;
#X obj 283 29 bng 15 250 50 0 delay_changed empty empty 17 7 0 10 #fce0c4
#000000 #000000;
#X text 380 51 <--start here;
#X text 315 382 NB: arrays will auto-update settings as soon as they
are clicked only if using L2Ork iteration of Pd (http://l2ork.music.vt.edu).
Otherwise click on respective bang buttons to activate changes. Sliders
behave the same.;
#X text 314 174 optional arguments:;
#X text 313 193 1) FFT length (1024);
#X text 313 205 2) window length (2048);
#X text 313 217 3) window overlap (2);
#X text 313 228 4) max delay in sec. (6);
#X obj 541 187 hsl 81 15 0 1 0 1 empty empty empty -2 -8 0 10 #fcfcc4
#000000 #000000 8000 1 0;
#X text 542 185 dry;
#X text 600 185 wet;
#N canvas 8 200 337 291 dry_wet 0;
#X obj 82 35 inlet~;
#X obj 141 35 inlet~;
#X obj 108 231 outlet~;
#X obj 83 175 *~;
#X obj 104 155 line~;
#X obj 142 175 *~;
#X obj 162 155 line~;
#X obj 250 35 inlet;
#X obj 104 113 expr 1-$f1;
#X msg 104 134 \$1 10;
#X msg 162 134 \$1 10;
#X connect 0 0 3 0;
#X connect 1 0 5 0;
#X connect 3 0 2 0;
#X connect 4 0 3 1;
#X connect 5 0 2 0;
#X connect 6 0 5 1;
#X connect 7 0 8 0;
#X connect 7 0 10 0;
#X connect 8 0 9 0;
#X connect 9 0 4 0;
#X connect 10 0 6 0;
#X restore 473 186 pd dry_wet;
#X text 315 251 spectdelay~ is a Pd port of John Gibson's jg.spectdelay~
for Max5 (c) John Gibson 2010 \, released under GNU/GPL license. Port
by Ivica Ico Bukvic (2010).;
#X obj -41 445 cnv 15 898 15 empty empty empty 20 12 0 14 #e0e0e0 #404040
0;
#X obj -41 -4 cnv 15 898 15 empty empty spectdelay~ 4 8 0 10 #e0e0e0
#404040 0;
#X msg 363 93 0 0 \, 1 0 5 \, 0 495 495;
#X obj 519 132 print;
#X connect 5 0 4 0;
#X connect 6 0 26 0;
#X connect 6 0 53 0;
#X connect 7 0 48 0;
#X connect 8 0 7 0;
#X connect 9 0 7 0;
#X connect 12 0 7 1;
#X connect 13 0 52 0;
#X connect 14 0 26 0;
#X connect 15 0 14 0;
#X connect 16 0 6 0;
#X connect 17 0 6 0;
#X connect 17 0 19 0;
#X connect 20 0 21 0;
#X connect 20 0 14 0;
#X connect 22 0 13 0;
#X connect 26 0 48 1;
#X connect 27 0 26 0;
#X connect 29 0 27 0;
#X connect 30 0 27 0;
#X connect 30 0 28 0;
#X connect 32 0 26 0;
#X connect 45 0 48 2;
#X connect 48 0 5 0;
#X connect 52 0 12 0;
