name: Testing build pipelines

on:
  push:
    branches: [ "build-pipelines" ]
  # pull_request:
    # branches: [ "master" ]
  workflow_dispatch:

jobs:
  build-linux:
    # runs-on: [self-hosted, linux, x64]
    runs-on: ubuntu-24.04
    steps:
    - name: deps
      # run: apt-get update && apt-get -y upgrade && apt-get -y install git unzip bison flex autoconf automake libasound2-dev libjack-jackd2-dev libtool libbluetooth-dev libgl1-mesa-dev libglu1-mesa-dev libglew-dev libmagick++-dev libftgl-dev libgmerlin-dev libgmerlin-avdec-dev libavifile-0.7-dev libmpeg3-dev libquicktime-dev libv4l-dev libraw1394-dev libdc1394-dev rsync libfftw3-dev libvorbis-dev ladspa-sdk dssi-dev tap-plugins invada-studio-plugins-ladspa blepvco swh-plugins mcp-plugins cmt blop omins rev-plugins dssi-utils vco-plugins wah-plugins fil-plugins mda-lv2 libmp3lame-dev libspeex-dev libgsl0-dev portaudio19-dev liblua5.3-dev python3-dev libsmpeg0 libjpeg-dev flite1-dev libgsm1-dev libgtk2.0-dev git libstk-dev wget libfluidsynth-dev fluid-soundfont-gm byacc cmake ninja-build patchelf libtirpc-dev libnss3 libudev-dev
      run: sudo apt-get install git unzip bison flex autoconf automake libasound2-dev libjack-jackd2-dev libtool libbluetooth-dev libgl1-mesa-dev libglu1-mesa-dev libglew-dev libmagick++-dev libftgl-dev libgmerlin-dev libgmerlin-avdec-dev libavifile-0.7-dev libmpeg3-dev libquicktime-dev libv4l-dev libraw1394-dev libdc1394-dev rsync libfftw3-dev libvorbis-dev ladspa-sdk dssi-dev tap-plugins invada-studio-plugins-ladspa blepvco swh-plugins mcp-plugins cmt blop omins rev-plugins dssi-utils vco-plugins wah-plugins fil-plugins mda-lv2 libmp3lame-dev libspeex-dev libgsl0-dev portaudio19-dev liblua5.3-dev python3-dev libsmpeg0 libjpeg-dev flite1-dev libgsm1-dev libgtk2.0-dev git libstk-dev wget libfluidsynth-dev fluid-soundfont-gm byacc cmake ninja-build patchelf libtirpc-dev libnss3 libudev-dev
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - name: make
      run: make light
    - uses: actions/upload-artifact@v4
      with:
        name: deb
        path: Pd-L2Ork-*.deb
        if-no-files-found: error

   create-release:
    needs: build-linux
    runs-on: ubuntu-latest
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: deb
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "v${{ github.run_number }}"
        release_name: "Release v${{ github.run_number }}"
        draft: false
        prerelease: false
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Pd-L2Ork-*.deb
        asset_name: Pd-L2Ork-${{ github.run_number }}.deb
        asset_content_type: application/vnd.debian.binary-package
        
  # build-macos:
  #   runs-on: macos-13
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: make
  #     run: make
  #   - uses: actions/upload-artifact@v4
  #     with:
  #       name: deb
  #       path: Pd-L2Ork-*.dmg
  #       if-no-files-found: error